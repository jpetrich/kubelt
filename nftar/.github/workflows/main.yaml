---
name: test and build
on:
  push:
    branches:
      - main

jobs:
  # nftar
  # ----------------------------------------------------------------------------
  build-test-nftar-dev:
    runs-on: ubuntu-latest
    env:
      CHAIN: 'ethereum'
      CHAIN_ID: 5
      OORT_URL: oort-devnet.kubelt.com
      STORAGE_KEY: ${{ secrets.NFT_STORAGE_DEV }}
      WALLET_PRIVATE_KEY: ${{ secrets.MINT_PFP_TEST_OPERATOR_PRIVATE_KEY }} # TODO: this is a bad env name
      ALCHEMY_URL: ${{ secrets.ALCHEMY_GOERLI_API_URL }}
      ALCHEMY_API_KEY: ${{ secrets.ALCHEMY_GOERLI_API_KEY }}
      ALCHEMY_NETWORK: 'ETH_MAINNET'
      INVITE_CONTRACT_ADDRESS: ${{ secrets.INVITE_TEST_CONTRACT_ADDRESS }}
      PFP_CONTRACT_ADDRESS: ${{ secrets.MINT_PFP_TEST_CONTRACT_ADDRESS }}
      NFTAR_API_KEY: 'test'
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v2
      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('/nftar/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - uses: actions/setup-node@v3
        with:
          node-version: lts/gallium
          cache: 'npm'
          cache-dependency-path: package-lock.json
      - run: npm install
        # working-directory: nftar
      - name: Build and Test
        run: npm test
        # working-directory: nftar
      - name: Deploy to gcloud
        run: echo gcloud builds submit
        # working-directory: nftar
      - name: Install 1Password
        run: npm install @1password/op-js
        # working-directory: nftar
      - name: Get secrets from 1Password
        run: node -e 'import { item } from "@1password/op-js"; console.log(JSON.stringify(item));'
      - name: Pulumi Up
        run: echo pulumi preview
        # working-directory: nftar